openapi: 3.0.2
info:
  title: User_Service
  description: "API related to users in twitter clone"
  contact:
    email: sanchitbansal10@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1-SNAPSHOT
externalDocs:
  url: https://sanchitbansal.com
tags:
  - name: user
    description: Operations about user
paths:
  /user/create_user:
    post:
      tags:
        - user
      summary: Create a User
      description: Create a User functionality
      operationId: createUser
      requestBody:
        description: Created User
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        default:
          description: successful operation
          content: {}
      x-codegen-request-body-name: body

  /user/{id}:
    get:
      summary: Get a user by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the user to get
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content: {}
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        password:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        bio:
          type: string
        profile_picture:
          type: string
        created_at:
          type: integer
        updated_at:
          type: integer
  securitySchemes:
    reflectoring_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://reflectoring.swagger.io/oauth/dialog
          scopes:
            write:users: modify users
            read:users: read users
    api_key:
      type: apiKey
      name: api_key
      in: header